openapi: 3.0.3

info:
  title: Swagger Bunny Board - OpenAPI 3.0
  description: |-
    This is data api endpoints are serving by Bunny Board infrastructures. This documentation maybe helpful for frontend developers or data consumers.
  version: 1.0.0

servers:
  - url: https://data.bunnyboard.xyz/board

tags:
  - name: CrossLending
    description: All available metrics about cross-lending protocols
    externalDocs:
      description: Find out more
      url: https://docs.bunnyboard.xyz

paths:
  /crossLending/overall:
    get:
      tags:
        - CrossLending
      summary: Get summarization of cross-lending data across all protocols
      operationId: getCrossLendingOverallData
      # parameters:
      #   - name: status
      #     in: query
      #     description: Status values that need to be considered for filter
      #     required: false
      #     explode: true
      #     schema:
      #       type: string
      #       default: available
      #       enum:
      #         - available
      #         - pending
      #         - sold
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  data:
                    $ref: '#/components/schemas/CrossLendingDataOverall'
        '500':
          description: Server Error

components:
  schemas:
    Token:
      type: object
      properties:
        chain:
          type: string
          example: ethereum
        symbol:
          type: string
          example: USDT
        decimals:
          type: number
          example: 6
        address:
          type: string
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
    DataValue:
      type: object
      properties:
        value:
          type: number
          format: float64
          example: 10
        changedDay:
          type: number
          format: float64
          example: 3.2
    CrossLendingDayData:
      type: object
      properties:
        timestamp:
          type: number
          example: 1706745600
        totalValueLocked:
          $ref: '#/components/schemas/DataValue'
        totalDeposited:
          $ref: '#/components/schemas/DataValue'
        totalBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeDeposited:
          $ref: '#/components/schemas/DataValue'
        volumeWithdrawn:
          $ref: '#/components/schemas/DataValue'
        volumeBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeRepaid:
          $ref: '#/components/schemas/DataValue'
        volumeLiquidated:
          $ref: '#/components/schemas/DataValue'
        volumeTotal:
          $ref: '#/components/schemas/DataValue'
        feesPaidTheoretically:
          $ref: '#/components/schemas/DataValue'
    CrossLendingReserve:
      type: object
      properties:
        protocol:
          type: string
          example: aavev3
        chain:
          type: string
          example: ethereum
        metric:
          type: string
          example: crossLending
        timestamp:
          type: number
          format: uint64
          example: 1706745600
        timefrom:
          type: number
          example: 1706745600
        timeto:
          type: number
          example: 1706745600
        token:
          $ref: '#/components/schemas/Token'
        tokenPrice:
          type: number
          example: 1
        totalValueLocked:
          $ref: '#/components/schemas/DataValue'
        totalDeposited:
          $ref: '#/components/schemas/DataValue'
        totalBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeDeposited:
          $ref: '#/components/schemas/DataValue'
        volumeWithdrawn:
          $ref: '#/components/schemas/DataValue'
        volumeBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeRepaid:
          $ref: '#/components/schemas/DataValue'
        volumeLiquidated:
          $ref: '#/components/schemas/DataValue'
        volumeTotal:
          $ref: '#/components/schemas/DataValue'
        feesPaidTheoretically:
          $ref: '#/components/schemas/DataValue'
        rateSupply:
          $ref: '#/components/schemas/DataValue'
        rateBorrow:
          $ref: '#/components/schemas/DataValue'
        rateLoanToValue:
          type: number
          example: 60
        rateUtilization:
          type: number
          example: 60
        numberOfUsers:
          $ref: '#/components/schemas/DataValue'
        numberOfTransactions:
          $ref: '#/components/schemas/DataValue'
    CrossLendingMarket:
      type: object
      properties:
        protocol:
          type: string
          example: aavev3
        chain:
          type: string
          example: ethereum
        metric:
          type: string
          example: crossLending
        timestamp:
          type: number
          example: 1706745600
        totalValueLocked:
          $ref: '#/components/schemas/DataValue'
        totalDeposited:
          $ref: '#/components/schemas/DataValue'
        totalBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeDeposited:
          $ref: '#/components/schemas/DataValue'
        volumeWithdrawn:
          $ref: '#/components/schemas/DataValue'
        volumeBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeRepaid:
          $ref: '#/components/schemas/DataValue'
        volumeLiquidated:
          $ref: '#/components/schemas/DataValue'
        volumeTotal:
          $ref: '#/components/schemas/DataValue'
        feesPaidTheoretically:
          $ref: '#/components/schemas/DataValue'
        rateUtilization:
          type: number
          example: 60
        reserves:
          type: array
          items:
            $ref: '#/components/schemas/CrossLendingReserve'
    CrossLendingDataOverall:
      type: object
      properties:
        totalValueLocked:
          $ref: '#/components/schemas/DataValue'
        totalDeposited:
          $ref: '#/components/schemas/DataValue'
        totalBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeDeposited:
          $ref: '#/components/schemas/DataValue'
        volumeWithdrawn:
          $ref: '#/components/schemas/DataValue'
        volumeBorrowed:
          $ref: '#/components/schemas/DataValue'
        volumeRepaid:
          $ref: '#/components/schemas/DataValue'
        volumeLiquidated:
          $ref: '#/components/schemas/DataValue'
        volumeTotal:
          $ref: '#/components/schemas/DataValue'
        feesPaidTheoretically:
          $ref: '#/components/schemas/DataValue'
        markets:
          type: array
          items:
            $ref: '#/components/schemas/CrossLendingMarket'
        dayData:
          type: array
          items:
            $ref: '#/components/schemas/CrossLendingDayData'
